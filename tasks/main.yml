---
- name: Install the registry dependency
  package:
    name:
      - docker
      - python-docker-py
      - docker-distribution
  become: true

- name: Prepare docker configuration
  copy:
    content: |
      {"insecure-registries":["{{ dci_sync_registry_local_ip }}:{{ dci_sync_registry_local_port }}"] }
    dest: /etc/docker/daemon.json
  become: true
  notify: docker restart

- name: Enable storage backend
  lineinfile:
    dest: /etc/sysconfig/docker-storage-setup
    line: "STORAGE_DRIVER={{ dci_sync_registry_storage }}"
    regexp: '^STORAGE_DRIVER='
  become: true
  notify: docker restart

- name: Create the docker.service.d directory
  file:
    path: /etc/systemd/system/docker.service.d/
    state: directory
    owner: root
    group: root
    mode: 0755
  become: true

- name: Create the http-proxy configuration for systemd
  template:
    src: docker_http_proxy.j2
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf
  become: true
  notify: docker restart

- name: Ensure docker is started
  service:
    name: docker
    state: started
    enabled: true
  become: true

- name: Prepare docker-distribution configuration
  template:
    src: docker_distribution.yml.j2
    dest: /etc/docker-distribution/registry/config.yml
  vars:
    registry_readonly: false
  become: true
  notify: registry restart

- name: Ensure docker-distribution is started
  service:
    name: docker-distribution
    state: started
    enabled: true
  become: true

- name: Open docker registry port on the firewall
  firewalld:
    zone: public
    port: '{{ dci_sync_registry_local_port }}/tcp'
    permanent: true
    state: enabled
  register: result
  failed_when: false
  become: true

- name: Skip container images from list
  lineinfile:
    path: '{{ dci_sync_registry_images_list }}'
    regexp: '.*-{{ item }}.*'
    state: absent
  with_items: '{{ dci_sync_registry_skip_list }}'

- meta: flush_handlers

- name: Download the container images
  script: ./fetch_images.py {{ dci_sync_registry_images_list }}
  register: image_sync_result
  until: image_sync_result.rc == 0
  retries: 3
  delay: 60
  become: true
  become_flags: '-E'
  changed_when: false
  environment:
    DCI_REGISTRY: '{{ dci_sync_registry_remote_url }}'
    DCI_REGISTRY_PASSWORD: '{{ dci_sync_registry_remote_password }}'
    DCI_REGISTRY_USER: '{{ dci_sync_registry_remote_login }}'

- name: Change docker-distribution to read-only mode while doing the garbage-collect
  template:
    src: docker_distribution.yml.j2
    dest: /etc/docker-distribution/registry/config.yml
  vars:
    registry_readonly: true
  become: true
  notify: registry restart
  tags: molecule-idempotence-notest

- name: Run the registry garbage-collect  # noqa 301
  command: /usr/bin/registry garbage-collect /etc/docker-distribution/registry/config.yml
  become: true
  tags: molecule-idempotence-notest

- name: Change docker-distribution to read-only mode while doing the garbage-collect
  template:
    src: docker_distribution.yml.j2
    dest: /etc/docker-distribution/registry/config.yml
  vars:
    registry_readonly: false
  become: true
  notify: registry restart
  tags: molecule-idempotence-notest
